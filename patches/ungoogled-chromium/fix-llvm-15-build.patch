# The second half of this reverts 830fec4889f9c9e3dcdbc29478f668031045f736

--- a/chrome/browser/apps/app_shim/app_shim_manager_mac.cc
+++ b/chrome/browser/apps/app_shim/app_shim_manager_mac.cc
@@ -1448,24 +1448,24 @@ std::map<base::FilePath, int> AppShimMan
   // URLs those profiles can handle.
   std::map<base::FilePath, AppShimRegistry::HandlerInfo> handlers =
       AppShimRegistry::Get()->GetHandlersForApp(params.app_id);
-  for (const auto& [profile, handler_info] : handlers) {
+  for (const auto& handler : handlers) {
     int count = base::ranges::count_if(
-        files, [&handler_info](const base::FilePath& file_path) {
+        files, [&handler](const base::FilePath& file_path) {
           std::string file_extension =
               base::FilePath(file_path.Extension()).AsUTF8Unsafe();
           return file_extension.length() > 1 &&
-                 base::Contains(handler_info.file_handler_extensions,
+                 base::Contains(handler.second.file_handler_extensions,
                                 file_extension);
         });
 
     if (protocol_handler_url.is_valid() &&
-        base::Contains(handler_info.protocol_handlers,
+        base::Contains(handler.second.protocol_handlers,
                        protocol_handler_url.scheme())) {
       count++;
     }
 
     if (count > 0)
-      result[profile] = count;
+      result[handler.first] = count;
   }
   return result;
 }
--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -770,10 +770,6 @@ config("compiler") {
     ldflags += [ "-Wl,--undefined-version" ]
   }
 
-  if (use_lld && is_apple) {
-    ldflags += [ "-Wl,--strict-auto-link" ]
-  }
-
   # LLD does call-graph-sorted binary layout by default when profile data is
   # present. On Android this increases binary size due to more thinks for long
   # jumps. Turn it off by default and enable selectively for targets where it's
--- a/third_party/blink/renderer/core/layout/ng/grid/ng_grid_layout_algorithm.cc
+++ b/third_party/blink/renderer/core/layout/ng/grid/ng_grid_layout_algorithm.cc
@@ -516,8 +516,11 @@ wtf_size_t NGGridLayoutAlgorithm::BuildG
                                 row_auto_repetitions);
 
   bool has_nested_subgrid = false;
-  auto& [grid_items, layout_data, subtree_size] =
+  auto& sizing_data =
       sizing_tree->CreateSizingData();
+  auto& grid_items = sizing_data.grid_items;
+  auto& layout_data = sizing_data.layout_data;
+  auto& subtree_size = sizing_data.subtree_size;
 
   if (!must_ignore_children) {
     // Construct grid items that are not subgridded.
@@ -1540,8 +1543,11 @@ void NGGridLayoutAlgorithm::InitializeTr
     NGGridSizingTree* sizing_tree) const {
   DCHECK(sizing_tree && current_grid_index < sizing_tree->Size());
 
-  auto& [grid_items, layout_data, subtree_size] =
+  auto& sizing_data =
       sizing_tree->At(current_grid_index);
+  auto& grid_items = sizing_data.grid_items;
+  auto& layout_data = sizing_data.layout_data;
+  auto& subtree_size = sizing_data.subtree_size;
 
   auto InitAndCacheTrackSizes = [&](GridTrackSizingDirection track_direction) {
     InitializeTrackCollection(opt_subgrid_data, track_direction, &layout_data);
