--- a/tools/rust/build_bindgen.py
+++ b/tools/rust/build_bindgen.py
@@ -29,8 +29,7 @@ from update import (RmTree)
 # The git hash to use.  See https://github.com/rust-lang/rust-bindgen/tags.
 # The current hash below corresponds to something between 0.72.0 and 0.73.0.
 BINDGEN_GIT_VERSION = '2426dd68cd12e0ac022bca18efb9c7d0acd27e12'
-BINDGEN_GIT_REPO = ('https://chromium.googlesource.com/external/' +
-                    'github.com/rust-lang/rust-bindgen')
+BINDGEN_GIT_REPO = ('https://github.com/rust-lang/rust-bindgen')
 
 BINDGEN_SRC_DIR = os.path.join(THIRD_PARTY_DIR, 'rust-toolchain-intermediate',
                                'bindgen-src')
@@ -96,15 +95,8 @@ def RunCargo(cargo_args):
               f'the build_rust.py script builds rustc that is needed here.')
         sys.exit(1)
 
-    clang_bins_dir = os.path.join(RUST_HOST_LLVM_INSTALL_DIR, 'bin')
-    llvm_dir = RUST_HOST_LLVM_INSTALL_DIR
-
-    if not os.path.exists(os.path.join(llvm_dir, 'bin', f'llvm-config{EXE}')):
-        print(f'Missing llvm-config in {llvm_dir}. This '
-              f'script expects to be run after build_rust.py is run as '
-              f'the build_rust.py script produces the LLVM libraries that '
-              f'are needed here.')
-        sys.exit(1)
+    clang_bins_dir = os.path.join(THIRD_PARTY_DIR, 'llvm-build', 'Release+Asserts', 'bin')
+    llvm_dir = os.path.join(THIRD_PARTY_DIR, 'llvm-build', 'Release+Asserts')
 
     env = collections.defaultdict(str, os.environ)
     # Cargo normally stores files in $HOME. Override this.
@@ -205,7 +197,7 @@ def main():
     install_dir = os.path.join(RUST_TOOLCHAIN_OUT_DIR)
     print(f'Installing bindgen to {install_dir} ...')
 
-    llvm_dir = RUST_HOST_LLVM_INSTALL_DIR
+    llvm_dir = os.path.join(THIRD_PARTY_DIR, 'llvm-build', 'Release+Asserts')
     shutil.copy(
         os.path.join(build_dir, RustTargetTriple(), 'release',
                      f'bindgen{EXE}'), os.path.join(install_dir, 'bin'))
