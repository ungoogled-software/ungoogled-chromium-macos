# Fix GN safe_browsing and building with safebrowsing disabled on macOS

--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -2005,10 +2005,6 @@ static_library("browser") {
     "//chrome/browser/ui",
     "//chrome/browser/storage_access_api",
     "//chrome/browser/top_level_storage_access_api:permissions",
-    "//chrome/browser/safe_browsing",
-    "//chrome/browser/safe_browsing:verdict_cache_manager_factory",
-    "//chrome/browser/safe_browsing:advanced_protection",
-    "//chrome/browser/safe_browsing:metrics_collector",
     "//chrome/browser/ip_protection",
 
     # TODO(crbug.com/1030821): Eliminate usages of browser.h from Media Router.
@@ -2131,7 +2127,6 @@ static_library("browser") {
     "//chrome/browser/resource_coordinator:mojo_bindings",
     "//chrome/browser/resource_coordinator:tab_manager_features",
     "//chrome/browser/resources/accessibility:resources",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/safe_browsing:advanced_protection",
     "//chrome/browser/safe_browsing:metrics_collector",
     "//chrome/browser/safe_browsing:verdict_cache_manager_factory",
--- a/chrome/browser/extensions/BUILD.gn
+++ b/chrome/browser/extensions/BUILD.gn
@@ -757,9 +757,6 @@ static_library("extensions") {
 
     # TODO(crbug.com/1065748): Remove this circular dependency.
     "//chrome/browser/web_applications/extensions",
-
-    # TODO(crbug.com/41437292): Remove this circular dependency.
-    "//chrome/browser/safe_browsing",
   ]
 
   # Since browser and browser_extensions actually depend on each other,
@@ -772,8 +769,6 @@ static_library("extensions") {
     "//chrome/common",
     "//chrome/common/extensions/api",
     "//components/omnibox/browser",
-    "//components/safe_browsing/core/browser/db:util",
-    "//components/safe_browsing/core/common/proto:csd_proto",
     "//components/safe_browsing/core/common/proto:realtimeapi_proto",
     "//components/signin/core/browser",
     "//components/translate/content/browser",
@@ -813,7 +808,6 @@ static_library("extensions") {
     "//chrome/browser/profiles",
     "//chrome/browser/profiles:profile",
     "//chrome/browser/resource_coordinator:mojo_bindings",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/safe_browsing:metrics_collector",
     "//chrome/browser/ui/tabs:tab_enums",
     "//chrome/browser/web_applications",
@@ -899,12 +893,6 @@ static_library("extensions") {
     "//components/proxy_config",
     "//components/reading_list/core",
     "//components/resources",
-    "//components/safe_browsing:buildflags",
-    "//components/safe_browsing/content/browser/web_ui:web_ui",
-    "//components/safe_browsing/core/browser/db:database_manager",
-    "//components/safe_browsing/core/common",
-    "//components/safe_browsing/core/common:safe_browsing_prefs",
-    "//components/safe_browsing/core/common/proto:csd_proto",
     "//components/search_engines",
     "//components/services/app_service",
     "//components/services/patch/content",
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -411,7 +411,6 @@ static_library("ui") {
     "//components/cross_device/logging",
     "//components/dom_distiller/core",
     "//components/paint_preview/buildflags",
-    "//components/safe_browsing:buildflags",
     "//components/sync",
     "//components/sync_user_events",
     "//components/translate/content/browser",
@@ -458,7 +457,6 @@ static_library("ui") {
     "//chrome/browser/profiling_host",
     "//chrome/browser/resources:dev_ui_resources",
     "//chrome/browser/resources:resources",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/share",
     "//chrome/browser/storage_access_api",
     "//chrome/browser/ui/side_panel:side_panel_enums",
@@ -610,17 +608,8 @@ static_library("ui") {
     "//components/reading_list/features:flags",
     "//components/renderer_context_menu",
     "//components/resources",
-    "//components/safe_browsing/content/browser",
-    "//components/safe_browsing/content/browser/password_protection",
     "//components/safe_browsing/content/browser/web_ui",
-    "//components/safe_browsing/core/browser/db:database_manager",
-    "//components/safe_browsing/core/browser/db:util",
-    "//components/safe_browsing/core/browser/password_protection:password_protection_metrics_util",
-    "//components/safe_browsing/core/browser/tailored_security_service",
-    "//components/safe_browsing/core/common",
-    "//components/safe_browsing/core/common:safe_browsing_prefs",
     "//components/safe_browsing/core/common/hashprefix_realtime:hash_realtime_utils",
-    "//components/safe_browsing/core/common/proto:csd_proto",
     "//components/schema_org/common:improved_mojom",
     "//components/search",
     "//components/search_engines",
@@ -734,7 +723,6 @@ static_library("ui") {
     # TODO(crbug.com/40161499): Remove this circular dependency.
     "//chrome/browser/devtools",
     "//chrome/browser/favicon",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/profiling_host",
 
     "//chrome/browser/permissions",
@@ -6945,26 +6933,6 @@ static_library("ui") {
     }
   }
 
-  if (safe_browsing_mode > 0) {
-    deps += [
-      "//components/safe_browsing/content/browser:safe_browsing_blocking_page",
-    ]
-  }
-
-  if (safe_browsing_mode == 1) {
-    sources += [
-      "webui/reset_password/reset_password_ui.cc",
-      "webui/reset_password/reset_password_ui.h",
-    ]
-
-    deps += [
-      "//chrome/browser/ui/webui/reset_password:mojo_bindings",
-      "//chrome/common/safe_browsing:proto",
-      "//components/safe_browsing/core/browser/password_protection:password_protection_metrics_util",
-      "//components/safe_browsing/core/common/proto:csd_proto",
-    ]
-  }
-
   if (use_dbus) {
     deps += [ "//dbus" ]
   }
--- a/chrome/browser/safe_browsing/download_protection/download_protection_service.cc
+++ b/chrome/browser/safe_browsing/download_protection/download_protection_service.cc
@@ -449,8 +449,12 @@ void DownloadProtectionService::ShowDeta
   Profile* profile = Profile::FromBrowserContext(
       content::DownloadItemUtils::GetBrowserContext(item));
   if (profile &&
+#if BUILDFLAG(FULL_SAFE_BROWSING)
       AdvancedProtectionStatusManagerFactory::GetForProfile(profile)
           ->IsUnderAdvancedProtection() &&
+#else
+      false &&
+#endif
       item->GetDangerType() ==
           download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT) {
     learn_more_url = GURL(chrome::kAdvancedProtectionDownloadLearnMoreURL);
--- a/chrome/browser/download/notification/download_item_notification.cc
+++ b/chrome/browser/download/notification/download_item_notification.cc
@@ -969,9 +969,13 @@ std::u16string DownloadItemNotification:
     }
     case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT: {
       bool requests_ap_verdicts =
+#if BUILDFLAG(FULL_SAFE_BROWSING)
           safe_browsing::AdvancedProtectionStatusManagerFactory::GetForProfile(
               profile())
               ->IsUnderAdvancedProtection();
+#else
+          false;
+#endif
       return l10n_util::GetStringFUTF16(
           requests_ap_verdicts
               ? IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT_IN_ADVANCED_PROTECTION
--- a/chrome/browser/ui/webui/downloads/downloads_ui.cc
+++ b/chrome/browser/ui/webui/downloads/downloads_ui.cc
@@ -39,6 +39,7 @@
 #include "components/history/core/common/pref_names.h"
 #include "components/prefs/pref_service.h"
 #include "components/profile_metrics/browser_profile_type.h"
+#include "components/safe_browsing/buildflags.h"
 #include "components/safe_browsing/core/common/features.h"
 #include "components/strings/grit/components_strings.h"
 #include "content/public/browser/download_manager.h"
@@ -68,10 +69,12 @@ content::WebUIDataSource* CreateAndAddDo
       source, base::make_span(kDownloadsResources, kDownloadsResourcesSize),
       IDR_DOWNLOADS_DOWNLOADS_HTML);
 
-  bool requests_ap_verdicts =
-      safe_browsing::AdvancedProtectionStatusManagerFactory::GetForProfile(
+  bool requests_ap_verdicts = false;
+#if BUILDFLAG(FULL_SAFE_BROWSING)
+      requests_ap_verdicts = safe_browsing::AdvancedProtectionStatusManagerFactory::GetForProfile(
           profile)
           ->IsUnderAdvancedProtection();
+#endif
   source->AddBoolean("requestsApVerdicts", requests_ap_verdicts);
 
   static constexpr webui::LocalizedString kStrings[] = {
--- a/chrome/browser/ui/views/download/download_danger_prompt_views.cc
+++ b/chrome/browser/ui/views/download/download_danger_prompt_views.cc
@@ -203,17 +203,18 @@ std::u16string DownloadDangerPromptViews
             download_->GetFileNameToReportUser().LossyDisplayName());
       }
       case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT: {
+#if BUILDFLAG(FULL_SAFE_BROWSING)
         if (safe_browsing::AdvancedProtectionStatusManagerFactory::
                 GetForProfile(profile_)
                     ->IsUnderAdvancedProtection()) {
           return l10n_util::GetStringFUTF16(
               IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT_IN_ADVANCED_PROTECTION,
               download_->GetFileNameToReportUser().LossyDisplayName());
-        } else {
+        } else
+#endif
           return l10n_util::GetStringFUTF16(
               IDS_PROMPT_UNCOMMON_DOWNLOAD_CONTENT,
               download_->GetFileNameToReportUser().LossyDisplayName());
-        }
       }
       case download::DOWNLOAD_DANGER_TYPE_POTENTIALLY_UNWANTED: {
         return l10n_util::GetStringFUTF16(
--- a/chrome/browser/ui/views/download/download_item_view.cc
+++ b/chrome/browser/ui/views/download/download_item_view.cc
@@ -1025,11 +1025,13 @@ ui::ImageModel DownloadItemView::GetIcon
 
   switch (danger_type) {
     case download::DOWNLOAD_DANGER_TYPE_UNCOMMON_CONTENT:
+#if BUILDFLAG(FULL_SAFE_BROWSING)
       return safe_browsing::AdvancedProtectionStatusManagerFactory::
                      GetForProfile(model_->profile())
                          ->IsUnderAdvancedProtection()
                  ? kWarning
                  : kError;
+#endif // BUILDFLAG(FULL_SAFE_BROWSING)
     case download::DOWNLOAD_DANGER_TYPE_DANGEROUS_URL:
     case download::DOWNLOAD_DANGER_TYPE_DANGEROUS_CONTENT:
     case download::DOWNLOAD_DANGER_TYPE_DANGEROUS_HOST:
--- a/chrome/test/BUILD.gn
+++ b/chrome/test/BUILD.gn
@@ -7337,13 +7337,9 @@ test("unit_tests") {
       "//chrome/browser/renderer_host:history_swiper",
       "//chrome/browser/updater:browser_updater_client",
       "//chrome/common/notifications",
-      "//chrome/common/safe_browsing:archive_analyzer_results",
-      "//chrome/common/safe_browsing:disk_image_type_sniffer_mac",
       "//chrome/services/mac_notifications:unit_tests",
       "//chrome/services/mac_notifications/public/mojom",
       "//chrome/updater:browser_sources",
-      "//chrome/utility/safe_browsing",
-      "//chrome/utility/safe_browsing/mac:dmg_common",
       "//components/power_metrics",
 
       # The test fetches resources which means Mac need the app bundle to exist
--- a/chrome/services/file_util/BUILD.gn
+++ b/chrome/services/file_util/BUILD.gn
@@ -44,10 +44,6 @@ source_set("file_util") {
     deps += [ "//components/services/filesystem/public/mojom" ]
   }
 
-  if (is_mac) {
-    deps += [ "//chrome/utility/safe_browsing" ]
-  }
-
   if (safe_browsing_mode == 1) {
     sources += [
       "safe_archive_analyzer.cc",
--- a/chrome/browser/enterprise/connectors/connectors_prefs.cc
+++ b/chrome/browser/enterprise/connectors/connectors_prefs.cc
@@ -69,10 +69,6 @@ void RegisterProfilePrefs(PrefRegistrySi
 #endif
   registry->RegisterIntegerPref(kOnSecurityEventScopePref, 0);
   RegisterDeviceTrustConnectorProfilePrefs(registry);
-
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_MAC)
-  client_certificates::RegisterProfilePrefs(registry);
-#endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_MAC)
 }
 
 void RegisterLocalStatePrefs(PrefRegistrySimple* registry) {
--- a/chrome/browser/policy/configuration_policy_handler_list_factory.cc
+++ b/chrome/browser/policy/configuration_policy_handler_list_factory.cc
@@ -2118,12 +2118,6 @@ const PolicyToPreferenceMapEntry kSimple
     prefs::kCAPlatformIntegrationEnabled,
     base::Value::Type::BOOLEAN },
 #endif // BUILDFLAG(CHROME_CERTIFICATE_POLICIES_SUPPORTED)
-
-#if BUILDFLAG(IS_WIN) || BUILDFLAG(IS_MAC)
-  { key::kProvisionManagedClientCertificateForUser,
-    client_certificates::prefs::kProvisionManagedClientCertificateForUserPrefs,
-    base::Value::Type::INTEGER },
-#endif  //
 };
 // clang-format on
 
--- a/chrome/browser/net/profile_network_context_service.cc
+++ b/chrome/browser/net/profile_network_context_service.cc
@@ -285,20 +285,7 @@ void UpdateCookieSettings(Profile* profi
 std::unique_ptr<net::ClientCertStore> GetWrappedCertStore(
     Profile* profile,
     std::unique_ptr<net::ClientCertStore> platform_store) {
-  if (!profile || !client_certificates::features::
-                      IsManagedClientCertificateForUserEnabled()) {
-    return platform_store;
-  }
-
-  auto* provisioning_service =
-      client_certificates::CertificateProvisioningServiceFactory::GetForProfile(
-          profile);
-  if (!provisioning_service) {
-    return platform_store;
-  }
-
-  return client_certificates::ClientCertificatesService::Create(
-      provisioning_service, std::move(platform_store));
+  return nullptr;
 }
 #endif  // BUILDFLAG(IS_WIN) || BUILDFLAG(IS_MAC)
 
